-------------------------version1-------------------------------------
----------------------------------------------------------------------
【项目介绍】：
  一个简单的带计时器的2048，计时器用canvas实现

【2048部分】：
1，初始化棋盘
board[position="absolute"]
  row_i_col_j[class="cell_bg"]:
          position="absolute"充当背景，这样在移动数字时不会缺一块
  cell[class="cell_0 cell_@{name}"]:
          position="absolute"记录每个位置的数字，显示不同的背景

2，生成两个随机位置，更新棋盘
更新过程：先清除所有的cell
在根据number的值生成新的cell
（因为之前移动时导致某些位置是没有了cell的）

3，为键盘监听事件，观察游戏是否可以继续玩下去
注意到是否能否向左移动和向左移动的逻辑是不同的

4，判断能否向左移动
观察第2,3,4列的格子，
如果某个格子值不为0，
左边为空格，则可以向左移动
不为空格，如果值相等则可以向左移动
只要检测到一个格子能向左移动就返回true

5，向左移动
令start为最左可以到达的地方，初始化为0
如果num[i][start]为0，则num[i][j]可以直接跳到这里
否则
  如果num[i][start]==num[i][j],则num[i][j]可以加到num[i][start]，同时要更新start
  否则
      将num[i][j]放到num[i][start+1]上，更新start


【不足】
1，移动还没添加动画，没有原版那种移动效果
2，随机数生成，感觉原版生成的位置对布局更有威胁，而不是简单的随机
3，未添加游戏结束的处理


-------------------------version2-------------------------------------
----------------------------------------------------------------------
添加计时器
初始化棋盘前确定startTime = new Date().getTime(),利用setInterval(updateTimer, 600)来更新时间显示
在updateTime里面，每次currTime =  = new Date().getTime()（注意是毫秒）
减去startTime获得耗时，按minute和second显示


-------------------------version3-------------------------------------
----------------------------------------------------------------------
添加小球
当minute和second的某个位置发生改变时，显示数字的同时生成相同位置的小球,
在main.js为小球的绘制和更新（包括速度位置）设置setInterval，
后来发现绘制小球和时间的interval不同步，
视觉效果不好
所以把小球绘制放到时间监听里面
同时为小球更新设置另外的interval
最后为了性能优化，将小球的可用性做一个检测


-------------------------version4-------------------------------------
----------------------------------------------------------------------
改进
1，确定小球更新的速度要快于小球绘制，否则小球位置移动慢，
好像运动不顺畅的感觉
2，调了下小球初始化的参数
3，调整了窗口resize时阻止滚动条事件，






























